# Generated by Django 2.2.19 on 2021-03-25 07:22

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='HouseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('houseName', models.CharField(max_length=16, null=True, verbose_name='公寓名称')),
                ('houseDesc', models.CharField(max_length=256, null=True, verbose_name='公寓简介')),
                ('location', models.CharField(max_length=32, null=True, verbose_name='地址')),
                ('houseImg', models.FileField(null=True, upload_to='Img/HouseImg', verbose_name='公寓照片')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('roomId', models.IntegerField(primary_key=True, serialize=False, verbose_name='房间号')),
                ('floor', models.IntegerField(null=True, verbose_name='楼层')),
                ('state', models.IntegerField(default=0, verbose_name='状态')),
                ('roomDesc', models.CharField(max_length=255, null=True, verbose_name='房间描述')),
                ('roomImg', models.FileField(null=True, upload_to='Img/RoomImg', verbose_name='房间照片')),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeName', models.CharField(max_length=16, null=True, verbose_name='房型名称')),
                ('typeImg', models.FileField(null=True, upload_to='Img/RoomImg', verbose_name='房型示例')),
                ('area', models.FloatField(null=True, verbose_name='大致面积')),
                ('edayRent', models.FloatField(null=True, verbose_name='预估租金/天')),
                ('emonRent', models.FloatField(null=True, verbose_name='预估租金/月')),
                ('eDeposit', models.FloatField(null=True, verbose_name='预估押金')),
                ('TypeDesc', models.CharField(max_length=255, null=True, verbose_name='房间描述')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realname', models.BigIntegerField(null=True, verbose_name='真实姓名')),
                ('idCard', models.BigIntegerField(null=True, verbose_name='身份证号')),
                ('cardCopy', models.FileField(null=True, upload_to='id_card', verbose_name='身份证复印件')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.BigIntegerField(null=True, verbose_name='手机号')),
                ('wechat', models.CharField(max_length=32, null=True, verbose_name='微信号')),
                ('createTime', models.DateTimeField(auto_now_add=True)),
                ('detail', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='Manager.UserDetail')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Manager.Room')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Manager.RoomType'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('orderId', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='订单号')),
                ('inTime', models.DateTimeField(verbose_name='入住时间')),
                ('outTime', models.DateTimeField(verbose_name='离开时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='订单创建时间')),
                ('ePay', models.FloatField(verbose_name='预付金额')),
                ('payState', models.BooleanField(default=False, verbose_name='支付情况')),
                ('orderDesc', models.CharField(max_length=255, null=True, verbose_name='订单描述')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Manager.Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('contractId', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='合同号')),
                ('inTime', models.DateTimeField(verbose_name='入住时间')),
                ('outTime', models.DateTimeField(verbose_name='离开时间')),
                ('createTime', models.DateTimeField(auto_now_add=True, verbose_name='合同创建时间')),
                ('rPay', models.FloatField(verbose_name='实付金额')),
                ('payState', models.BooleanField(default=False, verbose_name='支付情况')),
                ('contract', models.TextField(verbose_name='合同内容')),
                ('signature', models.FileField(upload_to='Contracts', verbose_name='实体合同')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Manager.Room')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
